{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport token from \"../token\";\nimport api from 'axios';\nexport var getProducts = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          token().then(function (credentials) {\n            var token = JSON.parse(credentials)[\"acess_token\"];\n          });\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(api.request({\n            method: 'GET',\n            url: \"http://localhost:8080/products\",\n            headers: {\n              'content-type': 'application/x-www-form-urlencoded',\n              'Authorization': {\n                Authorization: \"Bearer \" + token\n              }\n            }\n          }).then(function (res) {\n            if (res.status >= 200 && res.status < 300) {\n              storeUserData(res.data);\n              return Promise.resolve(res);\n            } else {\n              return Promise.reject(res);\n            }\n          }).catch(function (err) {\n            return Promise.reject(err);\n          }));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["token","api","getProducts","then","credentials","JSON","parse","request","method","url","headers","Authorization","res","status","storeUserData","data","Promise","resolve","reject","catch","err"],"sources":["/home/bruno/dev/simple-projects/frontend/src/services/Products/index.js"],"sourcesContent":["import token from '../token';\nimport api from 'axios';\n\nexport const getProducts = async () => {\n\n    token().then((credentials) => {\n        const token = JSON.parse(credentials)[\"acess_token\"]\n    })\n\n    await api.request({\n        method:'GET',\n        url: `http://localhost:8080/products`,\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded',\n                'Authorization': { Authorization: `Bearer ${token}` }\n            }\n    }).then(res => {\n        if (res.status >= 200 && res.status < 300) {\n            storeUserData(res.data);\n            return Promise.resolve(res);\n        } else {\n            return Promise.reject(res);\n        }\n    }).catch((err) => {\n        return Promise.reject(err);\n    })\n}"],"mappings":";AAAA,OAAOA,KAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,IAAMC,WAAW,GAAG;EAAA;IAAA;MAAA;QAAA;UAEvBF,KAAK,GAAGG,IAAR,CAAa,UAACC,WAAD,EAAiB;YAC1B,IAAMJ,KAAK,GAAGK,IAAI,CAACC,KAAL,CAAWF,WAAX,EAAwB,aAAxB,CAAd;UACH,CAFD;UAFuB;UAAA,iCAMjBH,GAAG,CAACM,OAAJ,CAAY;YACdC,MAAM,EAAC,KADO;YAEdC,GAAG,kCAFW;YAGVC,OAAO,EAAE;cACL,gBAAgB,mCADX;cAEL,iBAAiB;gBAAEC,aAAa,cAAYX;cAA3B;YAFZ;UAHC,CAAZ,EAOHG,IAPG,CAOE,UAAAS,GAAG,EAAI;YACX,IAAIA,GAAG,CAACC,MAAJ,IAAc,GAAd,IAAqBD,GAAG,CAACC,MAAJ,GAAa,GAAtC,EAA2C;cACvCC,aAAa,CAACF,GAAG,CAACG,IAAL,CAAb;cACA,OAAOC,OAAO,CAACC,OAAR,CAAgBL,GAAhB,CAAP;YACH,CAHD,MAGO;cACH,OAAOI,OAAO,CAACE,MAAR,CAAeN,GAAf,CAAP;YACH;UACJ,CAdK,EAcHO,KAdG,CAcG,UAACC,GAAD,EAAS;YACd,OAAOJ,OAAO,CAACE,MAAR,CAAeE,GAAf,CAAP;UACH,CAhBK,CANiB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAApB"},"metadata":{},"sourceType":"module"}