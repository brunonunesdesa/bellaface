{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Anton_400Regular } from '@expo-google-fonts/anton';\nimport Routes from \"./src/router\";\nimport { Provider } from 'react-redux';\nimport { Store } from \"./src/store\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction App() {\n  var newValue = this.props.newValue;\n\n  var _useFonts = useFonts({\n    Anton_400Regular: Anton_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  return _jsxs(Provider, {\n    store: Store,\n    children: [_jsx(StatusBar, {\n      style: \"auto\",\n      backgroundColor: \"#000\",\n      translucent: true\n    }), _jsx(Routes, {})]\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    newValue: store.clickState.newValue\n  };\n};\n\nexport default connect(mapStateToProps)(App);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useEffect","useState","AppLoading","useFonts","Anton_400Regular","Routes","Provider","Store","connect","App","newValue","props","fontsLoaded","mapStateToProps","store","clickState","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/bruno/dev/simple-projects/frontend/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, Anton_400Regular} from '@expo-google-fonts/anton';\nimport Routes from './src/router';\nimport { Provider } from 'react-redux';\nimport { Store } from './src/store';\nimport { connect } from 'react-redux';\n\nfunction App() {\n\n  const { newValue } = this.props;\n\n  let [fontsLoaded] = useFonts({\n    Anton_400Regular,\n  });  \n\n  if(!fontsLoaded){ \n    return <AppLoading />\n  }\n\n  return (\n    <Provider store={Store}>\n      <StatusBar style=\"auto\" backgroundColor=\"#000\" translucent={true}/>\n      <Routes/>\n    </Provider>\n  )\n}\n\nconst mapStateToProps = store => ({\n  newValue: store.clickState.newValue\n});\nexport default connect(mapStateToProps)(App);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":";AAAA,OAAO,8BAAP;AACA,SAASA,SAAT,QAA0B,iBAA1B;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,QAAR,EAAkBC,gBAAlB,QAAyC,0BAAzC;AACA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,SAASC,GAAT,GAAe;EAEb,IAAQC,QAAR,GAAqB,KAAKC,KAA1B,CAAQD,QAAR;;EAEA,gBAAoBP,QAAQ,CAAC;IAC3BC,gBAAgB,EAAhBA;EAD2B,CAAD,CAA5B;EAAA;EAAA,IAAKQ,WAAL;;EAIA,IAAG,CAACA,WAAJ,EAAgB;IACd,OAAO,KAAC,UAAD,KAAP;EACD;;EAED,OACE,MAAC,QAAD;IAAU,KAAK,EAAEL,KAAjB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAC,MAAjB;MAAwB,eAAe,EAAC,MAAxC;MAA+C,WAAW,EAAE;IAA5D,EADF,EAEE,KAAC,MAAD,KAFF;EAAA,EADF;AAMD;;AAED,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;EAAA,OAAK;IAChCJ,QAAQ,EAAEI,KAAK,CAACC,UAAN,CAAiBL;EADK,CAAL;AAAA,CAA7B;;AAGA,eAAeF,OAAO,CAACK,eAAD,CAAP,CAAyBJ,GAAzB,CAAf;AAEA,IAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}