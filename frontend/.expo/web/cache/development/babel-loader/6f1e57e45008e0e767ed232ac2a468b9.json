{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from 'axios';\n\nvar loginRequest = function _callee(_ref) {\n  var username, password;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          username = _ref.username, password = _ref.password;\n          api.request({\n            method: 'POST',\n            url: \"http://localhost:8080/oauth/token\",\n            auth: {\n              username: \"dscatalog\",\n              password: \"dscatalog123\"\n            },\n            headers: {\n              'content-type': 'application/x-www-form-urlencoded'\n            },\n            params: {\n              grant_type: \"password\",\n              username: username,\n              password: password\n            }\n          }).then(function (res) {\n            if (res.status >= 200 && res.status < 300) {\n              return Promise.resolve(res.data);\n            } else {\n              return Promise.reject(res);\n            }\n          }).catch(function (err) {\n            return Promise.reject(err);\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default loginRequest;","map":{"version":3,"names":["api","loginRequest","username","password","request","method","url","auth","headers","params","grant_type","then","res","status","Promise","resolve","data","reject","catch","err"],"sources":["/home/bruno/dev/simple-projects/frontend/src/services/auth.js"],"sourcesContent":["import api from 'axios';\n\nconst loginRequest = async ({username,password}) => {\n    api.request({\n        method:'POST',\n        url: `http://localhost:8080/oauth/token`,\n        auth: {\n            username: \"dscatalog\", \n            password: \"dscatalog123\" \n        },\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            params: {\n            grant_type: \"password\",\n            username,\n            password,\n        }\n    }).then(res => {\n        if (res.status >= 200 && res.status < 300) {\n            return Promise.resolve(res.data);\n        } else {\n            return Promise.reject(res);\n        }\n    }).catch((err) => {\n        return Promise.reject(err);\n    })\n}\n\nexport default loginRequest;"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,YAAY,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UAAQC,QAAR,QAAQA,QAAR,EAAiBC,QAAjB,QAAiBA,QAAjB;UACjBH,GAAG,CAACI,OAAJ,CAAY;YACRC,MAAM,EAAC,MADC;YAERC,GAAG,qCAFK;YAGRC,IAAI,EAAE;cACFL,QAAQ,EAAE,WADR;cAEFC,QAAQ,EAAE;YAFR,CAHE;YAOJK,OAAO,EAAE;cAAE,gBAAgB;YAAlB,CAPL;YAQJC,MAAM,EAAE;cACRC,UAAU,EAAE,UADJ;cAERR,QAAQ,EAARA,QAFQ;cAGRC,QAAQ,EAARA;YAHQ;UARJ,CAAZ,EAaGQ,IAbH,CAaQ,UAAAC,GAAG,EAAI;YACX,IAAIA,GAAG,CAACC,MAAJ,IAAc,GAAd,IAAqBD,GAAG,CAACC,MAAJ,GAAa,GAAtC,EAA2C;cACvC,OAAOC,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACI,IAApB,CAAP;YACH,CAFD,MAEO;cACH,OAAOF,OAAO,CAACG,MAAR,CAAeL,GAAf,CAAP;YACH;UACJ,CAnBD,EAmBGM,KAnBH,CAmBS,UAACC,GAAD,EAAS;YACd,OAAOL,OAAO,CAACG,MAAR,CAAeE,GAAf,CAAP;UACH,CArBD;;QADiB;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAArB;;AAyBA,eAAelB,YAAf"},"metadata":{},"sourceType":"module"}