{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, Anton_400Regular } from '@expo-google-fonts/anton';\nimport Routes from \"./src/router\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from \"./src/services/apiConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useFonts = useFonts({\n    Anton_400Regular: Anton_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var login = function _callee(user) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@user', user).then(function () {\n              console.log('login');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logout = function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMyStringValue = function _callee3() {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('@TOKEN_KEY'));\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var setStringValue = function _callee4(value) {\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@username', 'value'));\n\n          case 3:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  useEffect(function () {\n    verifyUser();\n  }, []);\n\n  var verifyUser = function verifyUser() {\n    try {\n      getMyStringValue().then(function (token) {\n        if (!token) {\n          api({\n            method: 'get',\n            url: \"/oauth/token\",\n            auth: {\n              username: \"dscatalog\",\n              password: \"dscatalog123\"\n            },\n            contentType: \"application/x-www-form-urlencoded\",\n            headers: {\n              'content-type': 'application/x-www-form-urlencoded'\n            },\n            data: JSON.stringify({\n              username: data.email,\n              password: data.password,\n              grant_type: \"password\"\n            })\n          }).then(function (response) {\n            console.log(response.data);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      });\n    } catch (e) {}\n  };\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"auto\",\n      backgroundColor: \"#000\",\n      translucent: true\n    }), _jsx(Routes, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","React","useEffect","useState","AppLoading","useFonts","Anton_400Regular","Routes","AsyncStorage","api","App","fontsLoaded","user","setUser","login","setItem","then","console","log","logout","getMyStringValue","getItem","setStringValue","value","verifyUser","token","method","url","auth","username","password","contentType","headers","data","JSON","stringify","email","grant_type","response","catch","err","e","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/bruno/dev/simple-projects/frontend/App.js"],"sourcesContent":["import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport AppLoading from 'expo-app-loading';\nimport {useFonts, Anton_400Regular} from '@expo-google-fonts/anton';\nimport Routes from './src/router';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from './src/services/apiConfig';\n\nexport default function App() {\n\n  let [fontsLoaded] = useFonts({\n    Anton_400Regular,\n  });\n\n  const [user, setUser] = useState({});\n\n  const login = async (user) => {\n    await AsyncStorage.setItem('@user', user).then(() => {\n      console.log('login')\n    });\n\n  };\n\n  const logout = async ()=>{\n    await AsyncStorage\n  };\n  \n  const getMyStringValue = async () => {\n    try {\n      return await AsyncStorage.getItem('@TOKEN_KEY')\n    } catch(e) {\n    }\n  }\n\n  const setStringValue = async (value) => {\n    try {\n      return await AsyncStorage.setItem('@username', 'value');\n    } catch(e) {\n      // save error\n    }\n  }\n\n  useEffect(\n    ()=>{\n      verifyUser()\n      \n    }\n  ,[])\n\n  const verifyUser = () => {\n    try{\n      getMyStringValue().then(token => {\n        if(!token) {\n          api({\n            method: 'get',\n            url: `/oauth/token`,\n            auth: {\n                username: \"dscatalog\", \n                password: \"dscatalog123\" \n            },\n            contentType: \"application/x-www-form-urlencoded\",\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: JSON.stringify({\n                username: data.email,\n                password: data.password,\n                grant_type: \"password\",\n            })}).then((response) => {\n              console.log(response.data);\n          }).catch((err) => {\n            console.log(err);\n          })\n        }\n      });\n      \n    } catch (e) {\n\n    }\n  }\n\n  \n\n  if(!fontsLoaded){ \n    return <AppLoading />\n  }\n\n  return (\n    <>\n      <StatusBar style=\"auto\" backgroundColor=\"#000\" translucent={true}/>\n      <Routes/>\n    </> \n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}